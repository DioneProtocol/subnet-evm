name: Testing gitactions

on:
  push:
    tags:
      - test-v*.*

jobs:
  build-subnetevm:
    name: Build subnet-evm binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: ./.github/actions/install-deps

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '>=18'

      - uses: ./.github/actions/setup-go

      - name: Install npm dependencies
        run: npm install
        working-directory: ./contracts 

      - name: Compile contracts
        run: npx hardhat compile
        working-directory: ./contracts  
      - name: Determine Tag
        id: determine_tag
        run: |
          if [[ "${{ github.event_name }}" == 'push' ]]; then
            echo "TAG=${GITHUB_REF/refs\/tags\//}" >> "$GITHUB_ENV"
          elif [[ "${{ github.event_name }}" == 'workflow_dispatch' ]]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> "$GITHUB_ENV"
          else
            echo "TAG=unknown" >> "$GITHUB_ENV"
          fi
        shell: bash

      - name: Archive binary in Targz
        run: |
          
          tar -czvf ../subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz subnet-evm
        shell: bash

      - name: Upload artifact with subnet-evm
        uses: actions/upload-artifact@v4
        with:
          name: subnet-evm_${{ env.TAG }}_linux_amd64
          path: subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz
          retention-days: 30

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz
          asset_name: subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz
          asset_content_type: application/x-tar
