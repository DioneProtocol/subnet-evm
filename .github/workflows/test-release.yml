name: Testing github action with test release

on:
  push:
    tags:
      - test-v*.*

jobs:
  build-subnetevm:
    name: Build subnet-evm binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: ./.github/actions/install-deps

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # убрать хард код

      - uses: ./.github/actions/setup-go

      - name: Install npm dependencies
        run: npm install
        shell: bash

      - name: Build Binary
        run: |
          ./scripts/build.sh
        shell: bash

      - name: Try to get tag from git
        if: ${{ github.event.inputs.tag == '' }}
        id: get_tag_from_git
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> "$GITHUB_ENV"
        shell: bash

      - name: Try to get tag from workflow dispatch
        if: ${{ github.event.inputs.tag != '' }}
        id: get_tag_from_workflow
        run: |
          echo "TAG=${{ github.event.inputs.tag }}" >> "$GITHUB_ENV"
        shell: bash

      - name: Archive binary in Targz
        run: |
          cd build
          tar -czvf ../subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz odysseygo
        shell: bash

      - name: Upload artifact with odysseygo
        uses: actions/upload-artifact@v4
        with:
          name: subnet-evm_${{ env.TAG }}_linux_amd64
          path: subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz
          retention-days: 30

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz
          asset_name: subnet-evm_${{ env.TAG }}_linux_amd64.tar.gz
          asset_content_type: application/x-tar
